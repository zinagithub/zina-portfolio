{"version":3,"sources":["components/food.jpg","components/reading-about-code-on-hackernoon.jpg","components/designecologist.jpg","components/navigation.js","components/header.js","components/about.js","components/skills.js","components/project.js","components/projects.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","navColor","color","displayLinks","map","val","i","to","style","key","className","React","Component","Header","About","backgroundColor","height","Skills","arrIcons","elm","index","myIcon","icon","myTitle","title","desc","description","Icons","this","props","Project","src","img","alt","name","Projects","useState","image1","image2","image3","projects","prj","Contact","adress","href","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.239a8205.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food.2edff820.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reading-about-code-on-hackernoon.e5047b8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/designecologist.971f16e9.jpg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './navigation.css'\n\nclass Navigation extends React.Component {\n\n  render() {\n  \tconst arrLinks = ['Home','About','Skills','Projects','Contact'];\n    const navColor = {color : '#212529'};\n    const displayLinks = arrLinks.map((val, i) => {\n    \treturn <Link to = {'/' + val} style = {navColor} ><li key = {i}>{val}</li></Link>\n    }\n\n    ); \n  \treturn (\n  \t\t <nav>\n  \t\t    <h1 className = 'logo'><span className = 'zLetter'>Z</span>\n                                 <span className = 'iLetter'>i</span>\n                                 <span className = 'nLetter'>n</span>\n                                 <span className = 'aLetter'>a</span>\n          </h1>\n            <ul className=\"hidden-xs\">\n            \t{displayLinks}\n            </ul>\n         </nav>\n  \t\t);\n  }\n\n}\n\nexport default Navigation;\n","import React from 'react';\nimport Navigation from './navigation'\n\n\nclass Header extends React.Component {\n\n  render() {\n  \treturn (\n  \t\t <Navigation />\n \t\t);\n  }\n\n}\n\nexport default Header;\n","import React from 'react';\nimport './about.css'\n\n\n\nclass About extends React.Component {\n\n  render() {\n  \tconst backHero = {\n      backgroundColor : \"#1dd1a1\",\n  \t\theight : '550px',\n  \t}\n\n  \treturn (\n      \n  \t\t <div className = 'hero' style= {backHero}>\n        <div className = 'container'>\n           <h1 className = 'herTitle'>About Me</h1>\n           <h1 className=\"parag\">Iâ€™m Zina Talaa, a software engineer and developer living\n            in <a>ALGERIA</a>, currently not working.\n           </h1>\n           \n  \t\t </div>\n       <button className=\"btn btn-primary btn-lg\">Contact</button>\n       </div>\n \t\t);\n  }\n\n}\n\nexport default About;\n","import React from 'react';\nimport './skills.css'\n\nclass Skills extends React.Component {\n\n  render() {\n  \t\n  \treturn (\n  \t\t <div className = 'skills'>\n            <h3 className = 'title1'>Skills</h3>\n            <h2 className = 'title2'>Here is my Skills</h2>\n            <div className = 'container'>\n            <div className = 'row'>\n            \n              {\n\n              arrIcons.map((elm, index) => {\n              \n               return (<Icons key = {index} myIcon = {elm.icon}   myTitle= {elm.title} \n                             desc = {elm.description} />)\n              })  \n              }\n             \n            </div> \n            </div>\n  \t\t </div>\n \t\t);\n  }\n\n}\n\n\nconst arrIcons = [\n  {\n    icon : <i className=\"fa fa-html5\"></i>,\n    title: 'HTML5',\n    description : 'Hyper text markup luanguage' \n  },\n  {\n    icon : <i className=\"fa fa-css3\"></i>,\n    title: 'CSS3',\n    description : 'Hyper text markup luanguage'\n  },\n  {\n    icon : <i className=\"fa fa-html5\"></i>,\n    title: 'HTML5',\n    description : 'Hyper text markup luanguage' \n  },\n  {\n    icon : <i className=\"fa fa-css3\"></i>,\n    title: 'CSS3',\n    description : 'Hyper text markup luanguage'\n  }\n   \n];\n\n\nclass Icons extends React.Component {\n\n  render() {\n      return (\n        <div className = 'col-xs-6 col-sm-4 col-md-3'>\n            <span>{this.props.myIcon}</span>\n            <h4>{this.props.myTitle}</h4>\n            <p>{this.props.desc}</p>\n        </div>\n\n        );\n    }\n\n}\n\nexport default Skills;\n","import React from 'react';\nimport './projects.css';\n\n\nfunction Project(props){\n\treturn (\n\t\t<div>\n\t\t   \n\t\t     <div className = 'col-sm-12 col-md-6  '>\n\t\t       <div className = 'project'>\n\t\t       <img src = {props.img} alt = {props.name} className=\"img-responsive\" />\n               <h3>{props.name}</h3>\n               <p>{props.description}</p>\n               </div>\n\t\t     </div>\n\t\t  \n\t\t     \n\t\t</div>\n\t\t)\n}\n\nexport default Project;","import React from 'react';\nimport { useState } from 'react';\n\nimport Project from './project';\nimport './projects.css';\nimport image1 from './food.jpg';\nimport image2 from './reading-about-code-on-hackernoon.jpg';\nimport image3 from './designecologist.jpg'\n\n\nfunction Projects(){\n\tconst [projects, setProjects] = useState([\n        {name: 'Tic-Tac-Toe', description: 'Tic-Tac-Toe Game created with javascript',img:image1},\n        {name: 'BattleShip', description: 'Simple javascript BattleShip game',img:image1},\n        {name: 'Facebook', description: 'RoR prject',img:image2},\n        {name: 'Bookstore', description: 'React javascript store books project',img:image3}\n\t\t  ]);\n\n\treturn (\n          <div className = 'container projects'>\n          {projects.map(prj => (\n             <Project name={prj.name} description= {prj.description} img = {prj.img} />\n          \t)\n          \t)}\n         </div>\n\t\t)\n}\nexport default Projects;\n","import React from 'react';\nimport './contact.css'\n\n\nclass Contact extends React.Component {\n\n  render() {\n  \tconst arrLinks = [\n    {name :'GitHub', adress : 'https://github.com/zinagithub/'},\n    {name :'CodePen', adress : 'https://codepen.io/zinafreecode'},\n    {name :'LinkedIn', adress : 'https://www.linkedin.com/in/zina-talaa-b0808b177/'},\n    {name :'Instagram', adress :''},\n    {name:'Email', adress :'mailto:talazina@gmail.com'}];\n    const displayLinks = arrLinks.map((val, i) => {\n    \treturn <div className=\"col-xs-12  col-sm-2 links\" key = {i}><a href = {val.adress} >{val.name}</a></div>\n    }\n\n    ); \n  \treturn (\n  \t\t<div className='footer'>\n  \t\t    <h2>Looking to start a project?</h2>\n          <p>Lets talk</p>                      \n              {displayLinks}           \n      </div>\n  \t\t);\n  }\n\n}\n\nexport default Contact;\n","import React from 'react';\nimport Header from './components/header';\nimport About from './components/about';\nimport Skills from './components/skills';\nimport Projects from './components/projects';\nimport Contact from './components/contact';\nimport {BrowserRouter as Router , Switch, Route} from 'react-router-dom';\n\nconst Home = () => (\n  <div>\n     <About />\n     <Skills />\n     <Projects />\n     <Contact />\n  </div>\n);\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n          <Header />\n          <Switch>\n          <Route path = \"/\" exact component = {Home} />\n          <Route path = \"/home\" component = {Home} />\n          <Route path = \"/about\" component = {About} />\n          <Route path = \"/skills\" component = {Skills} />\n          <Route path = \"/projects\" component = {Projects} />\n          <Route path = \"/contact\" component = {Contact} />\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}